type Employee @model {
  id: ID!
  firstname: String!
  lastname: String!
  address: [Address] @connection
  skills: [Skill] @connection
}
type Address @model {
  id: ID!
  line1: String!
  line2: String!
  city: String!
  state:String!
  zipcode: String!
}


type Skill @model {
  id: ID!
  skillName: String
}

type Mutation {
  addNewEmployee(input: AddNewEmployeeInput!): Employee @function(name: "employeeCRUDfunc-${env}")
  addNewAddress(input: AddNewAddressInput!): Address @function(name: "employeeCRUDfunc-${env}")
  addNewSkill(input: AddNewSkillInput!): Skill @function(name: "employeeCRUDfunc-${env}")
  editEmployee(input: EditEmployeeInput!): Employee @function(name: "employeeCRUDfunc-${env}")
  editAddress(input: EditAddressInput!): Address @function(name: "employeeCRUDfunc-${env}")
  editSkill(input: EditSkillInput!): Skill @function(name: "employeeCRUDfunc-${env}")
}

input AddNewEmployeeInput {
  id: ID
  firstname: String!
  lastname: String!
  address: [AddNewAddressInput]
  skills: [AddNewSkillInput]
}

input AddNewAddressInput {
  id: ID
  line1: String!
  line2: String!
  city: String!
  state: String!
  zipcode: String!
  employeeAddressId: String
}


input AddNewSkillInput {
  id: ID
  skillName: String!
  employeeSkillsId: ID
}


input EditEmployeeInput {
  id: ID!
  firstname: String
  lastname: String
  address:[EditAddressInput]
  skills: [EditSkillInput]
}

input EditAddressInput {
  id: ID!
  line1: String
  line2: String
  city: String
  state: String
  zipcode: String
  employeeAddressId: String
}


input EditSkillInput {
  id: ID!
  skillName: String
  employeeSkillsId: ID
}
